library(colorblindr)
# Load the first data set we will work with (built-in to ggplot)
data("midwest", package = "ggplot2")
force(midwest)
View(midwest)
# give it some aesthetics to work with...
ggplot(midwest, aes(x=area, y=poptotal))  # area and poptotal are columns in 'midwest'
# Give it a geom to map to your defined aesthetics... Basic Scatterplot, in this case:
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() # The "+" tells ggplot to add another layer to our base plot
# Add another geom ... a trendline:
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method = "lm")
# Store your plot as an object to add to...
p <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method = "lm")
# Zoom in
p + lims(x=c(0,0.1),y=c(0,1000000)) # what did this do?
p + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) # how is this different?
# Store this new zoomed-in plot
p2 <- p + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000))
# Add Title and Labels:
p2 + labs(title="Area Vs Population",
subtitle="From midwest dataset",
y="Population",
x="Area",
caption="Midwest Demographics")
# Nifty!  So here's the full function call to make this plot:
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point() +
geom_smooth(method="lm") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
# Change color of points and line to static values:
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(color="steelblue",size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
# Here's where ggplot gets really cool...
# Suppose if we want the color to change based on another column in the source dataset,
# we can specify "color" inside the "aesthetic" aes() function.
p3 <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
# Here's where ggplot gets really cool...
# Suppose if we want the color to change based on another column in the source dataset,
# we can specify "color" inside the "aesthetic" aes() function.
p3 <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
p3
# Don't like those colors?
p3 + scale_color_brewer(palette = "Set1")
# Want more color choices? You can check them out in the RColorBrewer package, or even make your own
brewer.pal.info
# Make your own and take a peek at it:
pal = c("#c4a113","#c1593c","#643d91","#820616","#477887","#688e52",
"#12aa91","#705f36","#8997b2","#753c2b","#3c3e44","#b3bf2d",
"#82b2a4","#894e7d","#a17fc1","#262a8e","#abb5b5","#000000")
palette_plot(pal)
# You can even check to see if your color choices would work for someone who has colorblindness...
cvd_grid(palette_plot(pal))
# Our plot with my custom color palette
p3 + scale_color_manual(values=pal)
# Other neat tricks:
p3 + scale_x_reverse()
p3 + theme_minimal()
p3 + theme_dark()
# You can also transform your data right in ggplot:
p4 = ggplot(midwest, aes(x=area/max(midwest$area), y=log10(poptotal))) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
labs(title="Area Vs Population", subtitle="From midwest dataset", color = "State",
y="log10 Population", x="Area (proportion of max)", caption="Midwest Demographics") +
theme_minimal() +
scale_color_manual(values=pal)
p4
# Want to divide up your plot into multiple ones based on a categorical variable?
p4 + facet_wrap(~ state)
p4 + facet_wrap(~ state, scales = "free") + theme(legend.position = "none")
p4 + facet_wrap(~ state) + theme(legend.position = "none", strip.text.x = element_text(size = 12, face="bold"))
# Some other "geom" types ... for categorical x axis
p5 = ggplot(midwest, aes(x=state,y=percollege, fill=state)) + labs(x="State",y="Percent with college degree")
p5
p5 + geom_boxplot()
p5 + geom_violin()
p5 + geom_bar(stat="identity") # something wrong with this picture!
# Geoms for looking at a single variable's distribution:
data("MplsStops")
ggplot(MplsStops, aes(x=lat)) + geom_histogram() + labs(title = "Latitude of police stops in Minneapolis - 2017")
ggplot(MplsStops, aes(x=lat, fill = race)) + geom_density(alpha = .5) + labs(title = "Latitude of police stops in Minneapolis - 2017")
ggplot(MplsStops, aes(x=lat, fill = race)) + geom_histogram() + labs(title = "Latitude of police stops in Minneapolis - 2017") +
facet_wrap(~race)
# Look at lat AND lon
ggplot(MplsStops, aes(x=lat,y=long,color=race)) + geom_point() + theme_minimal()
ggplot(MplsStops, aes(x=lat,y=long,color=race)) + geom_point() + theme_minimal() + facet_wrap(~race) # "overplotting!?"
ggplot(MplsStops, aes(x=lat,y=long,color=race)) + geom_point(alpha=.05) + theme_minimal() + facet_wrap(~race)
ggplot(MplsStops, aes(x=lat,y=long,color=race)) + geom_density_2d() + theme_minimal() + facet_wrap(~race)
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() + facet_wrap(~race)
# Plot using two related data sets
data("MplsDemo") # demographic info by neighborhood can be joined to our police stop dataset
# don't worry about this yet...you'll learn how to do this soon, but I'm just adding mean neighborhood income
# to each row of the police stop data set
income = as.numeric(as.character(plyr::mapvalues(MplsStops$neighborhood, from=MplsDemo$neighborhood, to = MplsDemo$hhIncome)))
MplsStops$income <- income
ggplot(MplsStops, aes(x=lat,y=long,color=income)) + geom_point(alpha=.2)
ggplot(MplsStops, aes(x=income)) + geom_histogram(bins = 30)
# don't worry about this yet...you'll learn how to do this soon, but I'm just adding mean neighborhood income
# to each row of the police stop data set
income = as.numeric(as.character(plyr::mapvalues(MplsStops$neighborhood, from=MplsDemo$neighborhood, to = MplsDemo$hhIncome)))
install.packages("plyr")
# don't worry about this yet...you'll learn how to do this soon, but I'm just adding mean neighborhood income
# to each row of the police stop data set
income = as.numeric(as.character(plyr::mapvalues(MplsStops$neighborhood, from=MplsDemo$neighborhood, to = MplsDemo$hhIncome)))
# don't worry about this yet...you'll learn how to do this soon, but I'm just adding mean neighborhood income
# to each row of the police stop data set
library (plyr)
income = as.numeric(as.character(plyr::mapvalues(MplsStops$neighborhood, from=MplsDemo$neighborhood, to = MplsDemo$hhIncome)))
random_data = data.frame( x=rnorm(20000, 10, 1.9), y=rnorm(20000, 11, 4.5) )
# quick look at data
plot(random_data$x)
# Basic scatterplot
ggplot(random_data, aes(x=x, y=y) ) +
geom_point()
# 2D Density plot, instead
ggplot(random_data, aes(x=x, y=y) ) +
geom_bin2d() +
theme_bw()
source('~/.active-rstudio-document', echo=TRUE)
library(tidyverse)
library(carData)
library(RColorBrewer)
library(colorblindr)
library(tidyverse)
data(iris)
force(iris)
View(iris)
p1= ggplot(iris, aes(x=Petal.Length, y=Sepal,Length))+
geom_point(aes(color=species))+ geom_smooth(method = "lm")
p1
p1= ggplot(iris, aes(x=Petal.Length, y=Sepal,Length))+
geom_point(aes(color="species"))+ geom_smooth(method = "lm")
p1
p1= ggplot(iris, aes(x=Petal.Length, y=Sepal.Length))+
geom_point(aes(color="species"))+ geom_smooth(method = "lm")
p1
p1= ggplot(iris, aes(x=Petal.Length, y=Sepal.Length))+
geom_point(aes(color=Species))+ geom_smooth(method = "lm")
p1
p1= ggplot(iris, aes(x=Petal.Length, y=Sepal.Length))+
geom_point(aes(color=Species))+ geom_smooth(method = "lm", aes(color=Species))
p1
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species))+ geom_smooth(method = "lm", aes(color=Species))
p1
# Load the first data set we will work with (built-in to ggplot)
data("midwest", package = "ggplot2")
# Here's where ggplot gets really cool...
# Suppose if we want the color to change based on another column in the source dataset,
# we can specify "color" inside the "aesthetic" aes() function.
p3 <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(color=state),size=3) +
geom_smooth(method="lm",color="firebrick") +
coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
p3 + theme_minimal()
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species")
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species, size ="3"))+ geom_smooth(method = "lm", aes(color=Species))
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species, size =3))+ geom_smooth(method = "lm", aes(color=Species))
p1
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species, size=3))+ geom_smooth(method = "lm", aes(color=Species))
p1
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species, size=2))+ geom_smooth(method = "lm", aes(color=Species))
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species)size=2)+ geom_smooth(method = "lm", aes(color=Species))
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species),size=2)+ geom_smooth(method = "lm", aes(color=Species))
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species),size=2)+ geom_smooth(method = "lm", aes(color=Species))
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species),size=3)+ geom_smooth(method = "lm", aes(color=Species))
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
plot1 <-p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
ggsave plot1("./iris_fig1.png")
ggsave("./iris_fig1.png")
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species))+ geom_smooth(method = "lm", aes(color=Species))
p1
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
plot1 <-p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
ggsave("./iris_fig1.png")
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species)size=2)+ geom_smooth(method = "lm", aes(color=Species))
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species),size=2)+ geom_smooth(method = "lm", aes(color=Species))
plot1 <-p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
ggsave(plot1,"./iris_fig1.png")
ggsave("./iris_fig1.png")
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species))+ geom_smooth(method = "lm", aes(color=Species))
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
ggsave("./iris_fig1.png")
?ggsave
ggsave("./iris_fig1.png", height=6,width=6)
ggsave("./iris_fig1.png", height=7,width=7)
ggsave("./iris_fig1.png", height=10,width=10)
ggsave("./iris_fig1.png", height=10,width=10, dpi=500)
ggsave("./iris_fig1.png")
ggplot(iris, aes(x=Petal.Width, color=Species))+
geom_density()
ggplot(iris, aes(x=Petal.Width, color=Species))+
geom_density(aes(fill=Species))
ggplot(iris, aes(x=Petal.Width, color=Species))+
geom_density(aes(fill=Species)) +
theme_minimal()
ggplot(iris, aes(x=Petal.Width, color=Species))+
geom_density(alpha=.5,aes(fill=Species)) +
theme_minimal()
ggplot(iris, aes(x=Petal.Width, color=Species))+
geom_density(alpha=.5,aes(fill=Species)) +
theme_minimal() +
labs(title="Distribution of Petal Widths", subtitle = "for three iris species",
x="Petal Width")
# Geoms for looking at a single variable's distribution:
data("MplsStops")
ggplot(MplsStops, aes(x=lat, fill = race)) + geom_density(alpha = .5) + labs(title = "Latitude of police stops in Minneapolis - 2017")
ggplot(iris, aes(x=Petal.Width, fill=Species))+
geom_density(alpha=.5) +
theme_minimal() +
labs(title="Distribution of Petal Widths", subtitle = "for three iris species",
x="Petal Width")
ggsave("./iris_fig2.png")
ggsave("./iris_fig2.png", dpi=500)
class(iris$Species)
width_ratio <- iris$Sepal.Width/iris$Petal.Width
iris$width_ratio <- iris$Sepal.Width/iris$Petal.Width
View(iris)
ggplot(iris, aes(y=width_ratio,x=Species))+
geom_boxplot(aes(fill=Species))
iris$width_ratio <- iris$Petal.Width/iris$Sepal.Width
ggplot(iris, aes(y=width_ratio,x=Species))+
geom_boxplot(aes(fill=Species))
ggplot(iris, aes(y=width_ratio,x=Species))+
geom_boxplot(aes(fill=Species)) +
theme_minimal()
ggplot(iris, aes(x=Petal.Width, fill=Species))+
geom_density(alpha=.5) +
theme_minimal() +
labs(title="Sepal- to Petal_Width Ratio", subtitle = "for three iris species",
x="Petal Width")
ggplot(iris, aes(x=Petal.Width, fill=Species))+
geom_density(alpha=.5) +
theme_minimal() +
labs(title="Distribution of Petal Widths", subtitle = "for three iris species",
x="Petal Width")
ggplot(iris, aes(y=width_ratio,x=Species))+
geom_boxplot(aes(fill=Species)) +
theme_minimal()+
labs(title = "Sepal- to Petal-Width Ratio",subtitle = "for three iris species", y="Ratio of Sepal Width to Petal Width")
ggplot(iris, aes(y=width_ratio,x=Species))+
geom_boxplot(aes(fill=Species)) +
theme_minimal()+
labs(title = "Sepal- to Petal-Width Ratio",subtitle = "for three iris species", y="Ratio of Sepal Width to Petal Width")
ggsave("./iris_fig3.png")
source('C:/Users/emmyl/Desktop/Bio3100/Data_Course_NAYLOR/Assignments/Assignment_5/Assignment_5.R', encoding = 'UTF-8', echo=TRUE)
source('C:/Users/emmyl/Desktop/Bio3100/Data_Course_NAYLOR/Assignments/Assignment_5/NAYLOR_ggplot.R', echo=TRUE)
data("mtcars")  # load data
mtcars$`car name` <- rownames(mtcars)  # create new column for car names
mtcars$mpg_z <- round((mtcars$mpg - mean(mtcars$mpg))/sd(mtcars$mpg), 2)  # compute normalized mpg
mtcars$mpg_type <- ifelse(mtcars$mpg_z < 0, "below", "above")  # above / below avg flag
mtcars <- mtcars[order(mtcars$mpg_z), ]  # sort
mtcars$`car name` <- factor(mtcars$`car name`, levels = mtcars$`car name`)  # convert to factor to retain sorted order in plot.
data("mtcars")  # load data
mtcars$`car name` <- rownames(mtcars)  # create new column for car names
mtcars$mpg_z <- round((mtcars$mpg - mean(mtcars$mpg))/sd(mtcars$mpg), 2)  # compute normalized mpg
mtcars$mpg_type <- ifelse(mtcars$mpg_z < 0, "below", "above")  # above / below avg flag
mtcars <- mtcars[order(mtcars$mpg_z), ]  # sort
mtcars$`car name` <- factor(mtcars$`car name`, levels = mtcars$`car name`)  # convert to factor to retain sorted order in plot.
View(mtcars)
ggplot(mtcars, aes(x=`car name`, y=mpg_z, label=mpg_z)) +
geom_bar(stat='identity', aes(fill=mpg_type), width=.5)  +
scale_fill_manual(name="Mileage",
labels = c("Above Average", "Below Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="Normalised mileage from 'mtcars'",
title= "Diverging Bars") +
coord_flip()
iris$Sepal.Length <- round((iris$Sepal.Length - mean(iris$Sepal.Length))/sd(iris$Sepal.Length), 2)
data(iris)
View(iris)
iris$Sepal.Length_z <- round((iris$Sepal.Length - mean(iris$Sepal.Length))/sd(iris$Sepal.Length), 2)
ggplot(mtcars, aes(x=Sepal.Length_z)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
iris$Sepal.Length_type <- ifelse(iris$Sepal.Length_z < 0, "below", "above")  # above / below avg flag
iris <- iris[order(irisSepal.Length_z), ]
iris <- iris[order(iris$Sepal.Length_z), ]
ggplot(iris, aes(y=Sepal.Length_z, x=NULL)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
iris$order <- rownames(iris)
iris$order <- c(1:150)
ggplot(iris, aes(y=Sepal.Length_z, x=Order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",x="Deviance from the Mean",caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=NULL
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=NULL
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=NULL
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=NULL
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=""
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=""
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",x=""
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
source('C:/Users/emmyl/Desktop/Bio3100/Data_Course_NAYLOR/Assignments/Assignment_5/NAYLOR_ggplot.R', echo=TRUE)
source('C:/Users/emmyl/Desktop/Bio3100/Data_Course_NAYLOR/Assignments/Assignment_5/NAYLOR_ggplot.R', echo=TRUE)
source('C:/Users/emmyl/Desktop/Bio3100/Data_Course_NAYLOR/Assignments/Assignment_5/NAYLOR_ggplot.R', echo=TRUE)
library(tidyverse)
library(carData)
library(RColorBrewer)
library(colorblindr)
################
##First Figure##
################
data(iris)
p1= ggplot(iris, aes(y=Petal.Length, x=Sepal.Length))+
geom_point(aes(color=Species))+ geom_smooth(method = "lm", aes(color=Species))
p1
p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
plot1 <-p1 + labs(title = "Sepal length vs petal length", subtitle = "for three iris species") +
theme_minimal()
ggsave("./iris_fig1.png")
?ggsave
#################
##Second Figure##
#################
ggplot(iris, aes(x=Petal.Width, fill=Species))+
geom_density(alpha=.5) +
theme_minimal() +
labs(title="Distribution of Petal Widths", subtitle = "for three iris species",
x="Petal Width")
ggsave("./iris_fig2.png")
################
##Third Figure##
################
class(iris$Species)
iris$width_ratio <- iris$Petal.Width/iris$Sepal.Width
ggplot(iris, aes(y=width_ratio,x=Species))+
geom_boxplot(aes(fill=Species)) +
theme_minimal()+
labs(title = "Sepal- to Petal-Width Ratio",subtitle = "for three iris species", y="Ratio of Sepal Width to Petal Width")
ggsave("./iris_fig3.png")
#################
##Fourth Figure##
#################
data(iris)
iris$Sepal.Length_z <- round((iris$Sepal.Length - mean(iris$Sepal.Length))/sd(iris$Sepal.Length), 2)
iris <- iris[order(iris$Sepal.Length_z), ]
iris$order <- c(1:150)
View(iris)
ggplot(iris, aes(x=Sepal.Length_z, y=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
class(order)
iris$order <- as.factor(iris$order)
class(order)
iris$order <- as.factor(iris$order)
class(iris$order)
ggplot(iris, aes(y=Sepal.Length_z, x=order)) +
geom_bar(stat='identity', aes(fill=Species), width=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order)) +
geom_bar(stat='identity', aes(fill=Species), size=.5)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order)) +
geom_bar(stat='identity', aes(fill=Species), size=.25)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order)) +
geom_bar(stat='identity', aes(fill=Species),)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order, color="white")) +
geom_bar(stat='identity', aes(fill=Species),)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order,)color="white") +
geom_bar(stat='identity', aes(fill=Species),)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order,), color="white") +
geom_bar(stat='identity', aes(fill=Species),)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
ggplot(iris, aes(y=Sepal.Length_z, x=order,), color=Species) +
geom_bar(stat='identity', aes(fill=Species),)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
p2 <- ggplot(iris, aes(y=Sepal.Length_z, x=order,), color=Species) +
geom_bar(stat='identity', aes(fill=Species),)  +
labs(title= "Sepal length deviation from the mean of all observations",
y="Deviance from the Mean",
caption="Note: Deviance= Sepal.Length -mean(Sepal.Length)") +
coord_flip()
